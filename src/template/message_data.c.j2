{#- jinja2 message_data.c.j2  > ../message_data.c -#}
/* Copyright 2011-2024 Wason Technology, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "robotraconteurlite/message.h"
#include <string.h>
#include <assert.h>
#include <math.h>

 {% set types=[("double","double"),("single","float"),("int8","int8_t"),("uint8","uint8_t"),("int16","int16_t"),
    ("uint16","uint16_t"),("int32","int32_t"),("uint32","uint32_t"),("int64","int64_t"),("uint64","uint64_t"),
    ("cdouble","struct robotraconteurlite_cdouble"),("csingle","struct robotraconteurlite_csingle"),
    ("bool","struct robotraconteurlite_bool")] %}

/* readers */
{% for type,ctype in types -%}
/* {{type}} */
robotraconteurlite_status robotraconteurlite_messageelement_reader_read_data_{{type}}_array(
    struct robotraconteurlite_messageelement_reader* element_reader, struct robotraconteurlite_array_{{type}}* dest_array)
{
    return robotraconteurlite_messageelement_reader_read_data_ex(element_reader,
                                                                {% if type in ("double","single") -%}
                                                                /* cppcheck-suppress invalidPointerCast */
                                                                {% endif -%}
                                                                 (uint8_t*)dest_array->data, &dest_array->len,
                                                                 ROBOTRACONTEURLITE_DATATYPE_{{type.upper()}}, sizeof({{ctype}}));
}

robotraconteurlite_status robotraconteurlite_messageelement_reader_read_data_{{type}}(
    struct robotraconteurlite_messageelement_reader* element_reader, {{ctype}}* value)
{
    return robotraconteurlite_messageelement_reader_read_data_scalar_ex(
        {% if type in ("double","single") -%}
        /* cppcheck-suppress invalidPointerCast */
        {% endif -%}
        element_reader, (uint8_t*)value, ROBOTRACONTEURLITE_DATATYPE_{{type.upper()}}, sizeof({{ctype}}));
}
{% endfor %}

/* writers */
{% for type,ctype in types -%}
/* {{type}} */
robotraconteurlite_status robotraconteurlite_messageelement_writer_write_{{type}}(
    struct robotraconteurlite_messageelement_writer* element_writer,
    const struct robotraconteurlite_string* element_name, {{ctype}} value)
{
    struct robotraconteurlite_array_{{type}} a;
    a.data = &value;
    a.len = 1;
    return robotraconteurlite_messageelement_writer_write_raw(element_writer, element_name,
                                                                {% if type in ("double","single") -%}
                                                                /* cppcheck-suppress invalidPointerCast */
                                                                {% endif -%}
                                                              (const uint8_t*)a.data, a.len,
                                                              ROBOTRACONTEURLITE_DATATYPE_{{type.upper()}}, sizeof({{ctype}}));
}

robotraconteurlite_status robotraconteurlite_messageelement_writer_write_{{type}}_array(
    struct robotraconteurlite_messageelement_writer* element_writer,
    const struct robotraconteurlite_string* element_name, const struct robotraconteurlite_array_{{type}}* value)
{
    return robotraconteurlite_messageelement_writer_write_raw(element_writer, element_name,
                                                                {% if type in ("double","single") -%}
                                                                /* cppcheck-suppress invalidPointerCast */
                                                                {% endif -%}
                                                              (const uint8_t*)value->data, value->len,
                                                              ROBOTRACONTEURLITE_DATATYPE_{{type.upper()}}, sizeof({{ctype}}));
}
{% endfor %}

/* string */

robotraconteurlite_status robotraconteurlite_messageelement_reader_read_data_string(
    struct robotraconteurlite_messageelement_reader* element_reader, struct robotraconteurlite_string* dest_str)
{
    return robotraconteurlite_messageelement_reader_read_data_ex(
        element_reader, (uint8_t*)dest_str->data, &dest_str->len, ROBOTRACONTEURLITE_DATATYPE_STRING, sizeof(char));
}

robotraconteurlite_status robotraconteurlite_messageelement_writer_write_data_string(
    struct robotraconteurlite_messageelement_writer* element_writer,
    const struct robotraconteurlite_string* element_name, const struct robotraconteurlite_string* value)
{
    return robotraconteurlite_messageelement_writer_write_raw(element_writer, element_name,
                                                              (const uint8_t*)value->data, value->len,
                                                              ROBOTRACONTEURLITE_DATATYPE_STRING, sizeof(char));
}
